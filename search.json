[{"title":"rust交叉编译pingap","path":"/2024/12/19/rust交叉编译/","content":"pingap介绍Pingap是类似于nginx的反向代理，基于pingora构建 交叉编译要交叉编译到的平台架构为debian armv7l(armhf)运行交叉编译的平台archlinux x64 1. 克隆源代码1git clone https://github.com/vicanso/pingap.git 2. 安装rust target123456# 查看rusth支持的targetrustup target list # 选择armv7-unknown-linux-gnueabihfrustup target add armv7-unknown-linux-gnueabihf# 查看是否安装成功，安装成功后对应架构会出现armv7-unknown-linux-gnueabihf (installed)rustup target list 3. 安装c&#x2F;c++交叉编译器gcc或zig (二选一)如果rust项目中存在需要编译的c&#x2F;c++依赖就要安装对应平台的编译器, 编译pingap需要安装 gcc 安装选择的gcc target为armv7l-linux-gnueabihf 12# 从archlinuxcn源安装sudo pacman -S armv7l-linux-gnueabihf-gcc zig 安装使用cargo-zigbuild,免去查找下载c&#x2F;c++交叉编译器的繁琐 123sudo pacman -S zig cargo-zigbuild# cargo-zigbuild可以在cargo中安装# cargo install cargo-zigbuild 4. 编译rust项目使用gcc 直接在项目中运行1cargo build --release --target=armv7-unknown-linux-gnueabihf --config target.armv7-unknown-linux-gnueabihf.linker=\\&quot;armv7l-linux-gnueabihf-gcc\\&quot;` 或设置项目配置文件在项目根目录的.cargo/config.toml添加12[target.armv7-unknown-linux-gnueabihf]linker = &quot;armv7l-linux-gnueabihf-gcc&quot; 然后运行 cargo build --release --target=armv7-unknown-linux-gnueabihf 标题中的为rust target, linker 中为c&#x2F;c++ 的target 使用zig直接在项目中运行 cargo zigbuild --target armv7-unknown-linux-gnueabihf","tags":["编程"]},{"title":"Hello World","path":"/2024/12/18/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1hexo new &quot;My New Post&quot; More info: Writing Run server1hexo server More info: Server Generate static files1hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"}]